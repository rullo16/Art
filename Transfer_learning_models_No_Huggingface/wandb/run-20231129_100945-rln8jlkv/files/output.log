c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
  0%|          | 0/48 [00:04<?, ?it/s]
No such comm: eca4147feb1446df95330dcd594ae813
No such comm: a7d23e376efb47baa6113e6df93f0025
No such comm: 7b2c552ea568477f871cd85cc9365c0c
No such comm: 30dc370ac5944f62bd0831e7dae0a08d
No such comm: 8e2de761e14f46a0a13ef693d9949222
No such comm: 7cf42434bb9c4f569818462d59ee6e25
No such comm: 29a6d51be7b04610a3ce693605d1f5ef
No such comm: 9522ad2c78f345f29f912c3ecd9efc6c
No such comm: 8c3a1c61aff24dbc89e65ccb28afc30b
No such comm: 27536cacd82b47a08d48452b97c7d440
No such comm: d59563ac021b4149a08367ecaa109b22
No such comm: b28c0517788d407396c7b709e7526cf7
No such comm: 5bd527e055274c44bbe6ecc51c54e3d7
No such comm: 04efd16f50394786a6262043c35a85df
No such comm: caf81271b5d14e0d85424abf63d27dce
No such comm: 8002784054b347eea789c5afd9432914
torch.Size([50, 50, 50, 100])
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)

  0%|          | 0/48 [00:04<?, ?it/s]
torch.Size([50, 50, 50, 100])
torch.Size([50, 50, 100])
torch.Size([50, 50, 50, 100])
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)

  0%|          | 0/48 [00:03<?, ?it/s]
torch.Size([50, 50, 100])
torch.Size([50, 50, 100])
torch.Size([50, 50, 100])
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)

  0%|          | 0/48 [00:03<?, ?it/s]
torch.Size([50, 50, 100])
torch.Size([50, 50, 100])
torch.Size([50, 50, 100])

  0%|          | 0/48 [00:03<?, ?it/s]

  0%|          | 0/48 [00:03<?, ?it/s]

  0%|          | 0/48 [00:04<?, ?it/s]
tensor([[[ 1.7730e-01,  2.5373e-01, -1.5254e-01,  ..., -1.8860e-01,
          -1.1875e-01,  1.1635e-01],
         [ 1.1660e-01,  3.1715e-02, -9.9300e-02,  ..., -2.7568e-03,
          -8.1026e-02,  1.1134e-02],
         [ 7.5719e-02,  9.9178e-02, -6.5898e-02,  ..., -1.2526e-02,
          -8.6759e-02,  1.5315e-02],
         ...,
         [-6.9346e-03, -7.5769e-02,  1.6235e-02,  ..., -3.1808e-03,
          -6.0469e-03, -4.2010e-02],
         [-1.6100e-02, -8.2601e-03,  7.0250e-03,  ..., -4.3138e-02,
          -4.0144e-02, -2.1120e-02],
         [ 3.3423e-02, -4.3878e-02,  4.6963e-03,  ..., -3.8078e-02,
          -5.0839e-02, -3.9349e-02]],
        [[ 2.2024e-01,  6.4295e-02, -2.9910e-02,  ..., -1.3854e-01,
          -2.0156e-01,  5.2071e-04],
         [ 2.7729e-02,  5.1949e-02,  9.4630e-02,  ..., -3.1619e-02,
          -4.2813e-02,  3.9310e-02],
         [ 9.0584e-02,  1.8987e-02,  5.0284e-02,  ..., -6.0437e-03,
          -5.2639e-02,  6.1198e-02],
         ...,
         [ 1.7529e-02,  2.4819e-02, -3.5645e-02,  ..., -1.7252e-02,
          -2.5629e-02, -1.0963e-02],
         [ 4.4659e-03,  3.1889e-02,  1.1102e-03,  ..., -2.8657e-02,
          -2.6026e-02, -1.1520e-02],
         [-1.8840e-02,  1.7165e-02,  3.8496e-02,  ..., -1.2459e-03,
          -3.2857e-04, -2.0969e-02]],
        [[-2.5517e-02,  9.2385e-02,  4.9413e-02,  ...,  8.7653e-03,
           4.8939e-02,  3.0563e-03],
         [-3.1348e-02,  3.9517e-02, -1.2794e-01,  ...,  8.6048e-02,
           3.1029e-02, -4.6870e-02],
         [-3.9621e-02, -2.3278e-02, -8.5622e-02,  ...,  5.1432e-02,
           1.9694e-02, -5.8328e-02],
         ...,
         [ 1.2395e-02,  7.5342e-04,  4.3812e-03,  ..., -5.1325e-02,
          -5.7945e-02, -5.5417e-02],
         [-1.8460e-02,  2.7328e-02, -4.1937e-02,  ..., -2.8630e-03,
          -4.4570e-02, -5.9070e-03],
         [ 2.7347e-02, -3.1001e-02,  5.2437e-02,  ...,  1.2907e-02,
           8.0928e-03,  5.8863e-02]],
        ...,
        [[ 4.2958e-02, -6.7734e-04, -6.6903e-03,  ..., -1.4175e-02,
          -1.1024e-04, -7.6352e-03],
         [ 1.8157e-03,  1.0202e-02,  1.3189e-02,  ..., -1.3918e-02,
          -1.3227e-02, -2.2337e-03],
         [ 1.2133e-02, -8.2214e-04, -2.2868e-02,  ..., -2.7750e-02,
          -2.0172e-02, -3.5297e-02],
         ...,
         [ 3.2927e-02, -1.8674e-02, -1.5165e-02,  ..., -4.0182e-03,
          -3.5494e-02, -6.2746e-02],
         [ 2.8304e-02, -1.1916e-02,  2.7509e-03,  ...,  4.6311e-03,
          -6.6231e-02, -2.9872e-02],
         [ 4.0341e-02, -2.1189e-02,  1.1347e-02,  ..., -9.9138e-03,
          -6.1913e-02, -7.3953e-02]],
        [[ 2.2687e-02, -1.4555e-02, -1.1462e-02,  ..., -1.5450e-02,
          -9.6387e-03, -1.7123e-02],
         [ 2.1541e-02, -8.7449e-03,  3.7322e-04,  ...,  1.8321e-02,
          -8.0314e-03, -1.9232e-02],
         [-2.3316e-02, -1.8550e-02, -3.0019e-03,  ..., -5.6973e-02,
          -1.6439e-02,  8.3847e-03],
         ...,
         [ 1.6995e-02, -3.9804e-02, -4.2691e-02,  ...,  2.9665e-02,
          -5.0470e-02, -3.1266e-03],
         [ 5.7379e-02,  1.4663e-02, -8.6715e-03,  ..., -3.1567e-04,
          -6.5852e-02, -5.2601e-05],
         [ 1.0899e-02, -6.2228e-04, -2.1001e-03,  ...,  4.5200e-03,
          -4.7124e-02,  9.1119e-03]],
        [[ 2.0576e-02, -5.5910e-03, -3.7903e-03,  ...,  3.6892e-03,
          -9.6985e-03, -1.0756e-02],
         [ 2.3219e-02, -1.2667e-02,  9.6220e-03,  ..., -1.9719e-04,
          -1.9222e-02, -1.7153e-02],
         [ 5.2330e-02,  3.7861e-03,  3.4238e-02,  ..., -3.3342e-02,
          -2.6802e-02, -5.1108e-02],
         ...,
         [ 1.9339e-02, -5.1357e-02, -5.5654e-03,  ..., -4.8688e-03,
          -1.5403e-02, -3.0410e-02],
         [ 1.4506e-02, -3.1663e-02, -3.1705e-02,  ..., -2.1762e-02,
          -1.1369e-03, -5.1059e-02],
         [ 1.9660e-02,  1.6755e-02, -6.3253e-02,  ..., -4.2939e-03,
          -7.5056e-02, -2.0039e-02]]], grad_fn=<AddBackward0>)
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)

  0%|          | 0/48 [00:04<?, ?it/s]
torch.Size([100, 50, 22384])
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)

  0%|          | 0/48 [00:03<?, ?it/s]
torch.Size([100, 50, 22384])
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)

  0%|          | 0/48 [00:04<?, ?it/s]
torch.Size([100, 50, 22384])
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)















































Epoch: 1, Batch: 48, Loss: 10.008214950561523: 100%|██████████| 48/48 [03:24<00:00,  4.26s/it]
















































Epoch: 2, Batch: 48, Loss: 10.00808048248291: 100%|██████████| 48/48 [03:26<00:00,  4.29s/it]
torch.Size([100, 50, 22384])
torch.Size([50, 50])
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)

  0%|          | 0/48 [00:03<?, ?it/s]
Downloading: "https://download.pytorch.org/models/resnet50-11ad3fa6.pth" to C:\Users\Fede/.cache\torch\hub\checkpoints\resnet50-11ad3fa6.pth






100%|██████████| 97.8M/97.8M [00:13<00:00, 7.84MB/s]
  0%|          | 0/48 [00:00<?, ?it/s]


Epoch: 1, Batch: 2, Loss: 10.024179458618164:   4%|▍         | 2/48 [00:08<03:11,  4.17s/it]

Epoch: 1, Batch: 2, Loss: 10.024179458618164:   4%|▍         | 2/48 [00:11<04:26,  5.80s/it]


Epoch: 1, Batch: 2, Loss: 10.006001472473145:   4%|▍         | 2/48 [00:08<03:15,  4.26s/it]
  0%|          | 0/48 [00:00<?, ?it/s]

Epoch: 1, Batch: 1, Loss: 10.02308177947998:   2%|▏         | 1/48 [00:04<03:19,  4.24s/it]

Epoch: 1, Batch: 2, Loss: 10.02111530303955:   4%|▍         | 2/48 [00:08<03:25,  4.47s/it]
  0%|          | 0/48 [00:00<?, ?it/s]

  0%|          | 0/48 [00:04<?, ?it/s]
  0%|          | 0/48 [00:00<?, ?it/s]

  0%|          | 0/48 [00:03<?, ?it/s]
  0%|          | 0/48 [00:00<?, ?it/s]
outputs:torch.Size([100, 50, 22384])


Epoch: 1, Batch: 2, Loss: 10.020903587341309:   4%|▍         | 2/48 [00:08<03:11,  4.17s/it]
outputs:torch.Size([100, 50, 22384])

Epoch: 1, Batch: 3, Loss: 10.020002365112305:   6%|▋         | 3/48 [00:12<03:08,  4.19s/it]
outputs:torch.Size([100, 50, 22384])

Epoch: 1, Batch: 3, Loss: 10.020002365112305:   6%|▋         | 3/48 [00:15<03:49,  5.09s/it]

  0%|          | 0/48 [00:03<?, ?it/s]
outputs:torch.Size([100, 50, 22384])
  0%|          | 0/48 [00:00<?, ?it/s]
outputs:torch.Size([100, 50, 22384])
outputs:torch.Size([100, 50, 22384])


Epoch: 1, Batch: 1, Loss: 10.01258659362793:   2%|▏         | 1/48 [00:07<05:32,  7.07s/it]

Epoch: 1, Batch: 1, Loss: 10.012673377990723:   2%|▏         | 1/48 [00:04<03:16,  4.18s/it]
outputs:torch.Size([100, 50, 22384])

Epoch: 1, Batch: 2, Loss: 10.01314926147461:   4%|▍         | 2/48 [00:08<03:15,  4.25s/it]
outputs:torch.Size([100, 50, 22384])

Epoch: 1, Batch: 2, Loss: 10.01314926147461:   4%|▍         | 2/48 [00:10<03:54,  5.11s/it]
  0%|          | 0/48 [00:00<?, ?it/s]
outputs:torch.Size([100, 50, 22384])


Epoch: 1, Batch: 1, Loss: 10.008260726928711:   2%|▏         | 1/48 [00:07<05:44,  7.33s/it]

Epoch: 1, Batch: 1, Loss: 10.015624046325684:   2%|▏         | 1/48 [00:04<03:17,  4.20s/it]

Epoch: 1, Batch: 2, Loss: 10.011873245239258:   4%|▍         | 2/48 [00:08<03:23,  4.41s/it]

Epoch: 1, Batch: 3, Loss: 10.01563549041748:   6%|▋         | 3/48 [00:13<03:21,  4.47s/it]

Epoch: 1, Batch: 4, Loss: 10.013533592224121:   8%|▊         | 4/48 [00:17<03:13,  4.40s/it]

Epoch: 1, Batch: 5, Loss: 10.01448917388916:  10%|█         | 5/48 [00:21<03:06,  4.33s/it]

Epoch: 1, Batch: 6, Loss: 10.013496398925781:  12%|█▎        | 6/48 [00:26<03:01,  4.32s/it]
torch.Size([100, 50, 22384])


Epoch: 1, Batch: 8, Loss: 10.014958381652832:  17%|█▋        | 8/48 [00:34<02:50,  4.26s/it]
torch.Size([100, 50, 22384])

Epoch: 1, Batch: 9, Loss: 10.015007972717285:  19%|█▉        | 9/48 [00:38<02:43,  4.20s/it]

Epoch: 1, Batch: 10, Loss: 10.013349533081055:  21%|██        | 10/48 [00:43<02:44,  4.32s/it]

Epoch: 1, Batch: 1, Loss: 10.011474609375:   2%|▏         | 1/48 [00:04<03:17,  4.20s/it]

Epoch: 1, Batch: 1, Loss: 10.011474609375:   2%|▏         | 1/48 [00:07<06:09,  7.86s/it]
  0%|          | 0/48 [00:00<?, ?it/s]


Epoch: 1, Batch: 1, Loss: 10.017935752868652:   2%|▏         | 1/48 [00:06<05:20,  6.81s/it]
  0%|          | 0/48 [00:00<?, ?it/s]
torch.Size([100, 50, 22384])


Epoch: 1, Batch: 2, Loss: 10.01733684539795:   4%|▍         | 2/48 [00:09<03:31,  4.60s/it]
torch.Size([100, 50, 22384])
torch.Size([50, 50])
torch.Size([100, 50, 22384])


Epoch: 1, Batch: 4, Loss: 10.015632629394531:   8%|▊         | 4/48 [00:17<03:16,  4.47s/it]
torch.Size([100, 50, 22384])
torch.Size([50, 50])
torch.Size([100, 50, 22384])


Epoch: 1, Batch: 5, Loss: 10.015840530395508:  10%|█         | 5/48 [00:24<03:33,  4.97s/it]















































Epoch: 1, Batch: 48, Loss: 10.01574420928955: 100%|██████████| 48/48 [03:18<00:00,  4.14s/it]
















































Epoch: 2, Batch: 48, Loss: 10.017073631286621: 100%|██████████| 48/48 [03:19<00:00,  4.15s/it]
torch.Size([100, 50, 22384])
torch.Size([50, 50])
torch.Size([100, 50, 22384])
torch.Size([50, 50])
torch.Size([100, 50, 22384])
torch.Size([50, 50])
Label: tensor([    1, 16248, 16249,    68,    71, 16250,     5,    84,  2754,   158,
          715,     7,  1704,    43,   303,    11,  9448,  2226,    71,    50,
           43,     7,  3415,    11,  4125,  5859,    28,     7,  1904,    11,
        16251, 16252,    19,     2,     0,     0,     0,     0,     0,     0,
            0,     0,     0,     0,     0,     0,     0,     0,     0,     0])
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Predicted: sweetness Spada particularity particularity particularity playwright playwright playwright 297 297 297 Romantic 297 Romantic playwright 297 297 Romantic 297 Romantic playwright 297 297 Romantic 297 Romantic playwright 297 297 Romantic 297 Romantic playwright 297 297 Romantic 297 Romantic playwright 297 297 Romantic 297 Romantic playwright 297 297 Romantic 297 Romantic playwright
Batch: 0, Loss: 10.0153169631958
Batch: 1, Loss: 10.016352653503418
Batch: 2, Loss: 10.015230178833008
Batch: 3, Loss: 10.015523910522461
Batch: 4, Loss: 10.016499519348145
Batch: 5, Loss: 10.017001152038574
Batch: 6, Loss: 10.017195701599121
Batch: 7, Loss: 10.016363143920898
Batch: 8, Loss: 10.015409469604492
Batch: 9, Loss: 10.016047477722168
Batch: 10, Loss: 10.016260147094727
Batch: 11, Loss: 10.015445709228516
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
