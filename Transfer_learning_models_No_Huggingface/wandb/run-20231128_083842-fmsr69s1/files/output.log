No such comm: 3d94e57b29c541babfe7a98d49ee0de1
No such comm: e85cae3d394e464fb3d00acd71ca1bde
  5%|▍         | 139/3000 [00:01<00:31, 91.61it/s]

















100%|██████████| 3000/3000 [00:35<00:00, 83.69it/s]
No such comm: 7b25dccbde624e10978db8c3b4768402
No such comm: 1039c80c45d04ab993edd02825b794cf
No such comm: d2dbc9f251534815bd329a0e34c1aaae
No such comm: 5be0f6ae716748af83843787c04d2f7e
No such comm: a5287c444c5746f6956e9dde988060f8
No such comm: 057ccc7b834d4e608a193cfc424cde56
No such comm: fd5d70040de0403992daa916b168708b
No such comm: 854d4d228285469db024bd899417e4bf
No such comm: e7cb588501ba4466baa265acdf766874
No such comm: e82d21c82bd74dc39e63fc4d8f7f658c
No such comm: f78c376031ce4b30b9b282f8299c1a0e
No such comm: a5e2593ac0a34de2aeb4908ecf4f8b53
No such comm: 9920ae011d24452d8f4c6ed9d810dee0
No such comm: 045df07764224579b5df77f8b15051f7
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
mean and std before normalize:
Mean of the image: tensor([0.4685, 0.3801, 0.3472])
Std of the image: tensor([0.2129, 0.1872, 0.1589])
Feature batch shape: torch.Size([50, 3, 256, 256])
Labels batch shape: 50
Label: tensor([[  3,   4,   5,  ...,  19,  19,  19],
        [  3,  20,  21,  ...,   3,  42,  56],
        [ 57,  58,  59,  ...,  19,  19,  19],
        ...,
        [  3, 144,  53,  ...,   7,   3, 958],
        [  7, 565,  51,  ..., 973,  54,  28],
        [183, 974, 975,  ..., 288, 994,  54]])
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
c:\Users\Fede\anaconda3\envs\tf\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)















































Epoch: 1, Batch: 48, Loss: 42.03505325317383: 100%|██████████| 48/48 [05:14<00:00,  6.55s/it]

















































Epoch: 2, Batch: 48, Loss: 41.56914520263672: 100%|██████████| 48/48 [05:02<00:00,  6.30s/it]
Batch: 0, Loss: 36.06340789794922
Batch: 1, Loss: 44.46022415161133
Batch: 2, Loss: 43.10173416137695
Batch: 3, Loss: 44.7435417175293
Batch: 4, Loss: 38.701820373535156
Batch: 5, Loss: 41.495059967041016
Batch: 6, Loss: 39.610206604003906
Batch: 7, Loss: 42.538063049316406
Batch: 8, Loss: 46.0120964050293
Batch: 9, Loss: 39.07107162475586
Batch: 10, Loss: 42.345516204833984
Batch: 11, Loss: 39.055850982666016
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
